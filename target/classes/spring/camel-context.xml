<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <dataFormats>
            <json allowJmsType="true" allowUnmarshallType="true"
                contentTypeHeader="false"
                enableJaxbAnnotationModule="false" id="pojotest"
                library="Jackson" prettyPrint="false"
                unmarshalTypeName="com.json.netty.util.PojoTest" useDefaultObjectMapper="true"/>
        </dataFormats>
        <restConfiguration bindingMode="off" component="restlet"
            contextPath="/hanabank" host="localhost" port="7070"/>
        <rest id="rest-1e852fc0-7e2d-430c-b111-006050d7428a">
            <post id="6a8d49ca-dd9f-4a6d-9dae-19245a588c24" uri="/test/json">
                <to uri="direct:posttest"/>
            </post>
            <post id="296e2f27-235f-4821-ae49-b595f5ee017d" uri="/reg">
                <to uri="direct:post"/>
            </post>
            <get id="461cbcae-9cd6-44bd-a7a9-a7d54105cc4f" uri="/hello/{name}">
                <to uri="direct:get"/>
            </get>
        </rest>
        <route id="_GET">
            <from id="_from1" uri="direct:get"/>
            <doTry id="_doTry1">
                <log id="_log1" loggingLevel="WARN" message="Header name value : ${body}"/>
                <setBody id="_setBody4">
                    <simple>${header.name}</simple>
                </setBody>
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${body}== 'arken'</simple>
                        <setBody id="_setBody1">
                            <simple>[ "result" : "Hello Boss , ${header.name}"" ]</simple>
                        </setBody>
                    </when>
                    <otherwise id="_otherwise1">
                        <setBody id="_setBody3">
                            <simple>[ "result" : "Hello, ${header.name}" ]</simple>
                        </setBody>
                    </otherwise>
                </choice>
                <doCatch id="_doCatch1">
                    <!-- catch multiple exceptions -->
                    <exception>java.io.IOException</exception>
                    <exception>java.lang.IllegalStateException</exception>
                    <exception>org.apache.camel.CamelExchangeException</exception>
                    <exception>java.lang.IllegalArgumentException</exception>
                    <setBody id="_setBody5">
                        <simple>[ "result" : "Errorrrr" ]</simple>
                    </setBody>
                </doCatch>
            </doTry>
        </route>
        <route id="_POST">
            <from id="_from2" uri="direct:post"/>
            <log id="_log2" message="${body}"/>
            <bean id="_bean1" method="generate" ref="preGenerateFL"/>
            <marshal id="_marshal2">
                <flatpack definition="flconfigIn.xml" fixed="true" ignoreFirstRecord="false"/>
            </marshal>
            <to id="_to2" uri="netty:tcp://localhost:7000?requestTimeout=10000&amp;allowDefaultCodec=false&amp;decoder=#stringDecoder&amp;encoder=#stringEncoder&amp;textline=true"/>
            <log id="_log3" message="After Call TCP :${body}"/>
            <unmarshal id="_unmarshal1">
                <flatpack definition="flconfigOut.xml" fixed="true" ignoreFirstRecord="false"/>
            </unmarshal>
            <setProperty id="_DESC" propertyName="getDESC">
                <simple>${body.get(0).get(DESC)}</simple>
            </setProperty>
            <setBody id="_setBody2">
                <simple>${body.get(0).get(DESC)}</simple>
            </setBody>
            <marshal id="_marshal3">
                <json library="Gson"/>
            </marshal>
        </route>
        <route id="_POST_TEST">
            <from id="_from3" uri="direct:posttest"/>
            <log id="_log4" message="Input message : ${body}"/>
            <!-- <marshal id="_parseInput"> <custom ref="pojotest"/> </marshal> -->
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <unmarshal id="_unmarshal2">
                <custom ref="pojotest"/>
            </unmarshal>
            <log id="_log5" message="ops value : ${body.ops}"/>
            <bean id="_bean2"
                method="assignValue(${body.basic.ref},${body.basic.tid},${body.basic.remark},${body.ops})" ref="jsonResult"/>
            <marshal id="_marshal1">
                <json library="Jackson"/>
            </marshal>
        </route>
    </camelContext>
    <bean class="org.jboss.netty.handler.codec.string.StringDecoder" id="stringDecoder"/>
    <!-- String to ChannelBuffer/ByteBuf -->
    <bean class="org.jboss.netty.handler.codec.string.StringEncoder" id="stringEncoder"/>
    <bean class="com.json.netty.GenerateJson" id="generateJson" scope="singleton"/>
    <bean class="com.json.netty.PreGenerateFixedLength"
        id="preGenerateFL" scope="singleton"/>
    <bean class="com.json.netty.util.JsonResult" id="jsonResult" scope="singleton"/>
</beans>
